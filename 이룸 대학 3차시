import time
#a<>b -> 다르다
#연산자 우선순위
'''
1	++	후위 증가 연산자
 	--	후위 감소 연산자
 	()	함수 호출
 	[]	첨자 연산자
 	.	참조에 의한 선택
 	->	포인터를 통한 선택
 2	!	논리 NOT 연산자
 	~	비트 NOT 연산자
 	+	양의 부호 (단항 연산자)
 	-	음의 부호 (단항 연산자)
 	++	전위 증가 연산자
 	--	전위 감소 연산자
 	(타입)	타입 캐스트 연산자
 	*	참조 연산자 (단항 연산자)
 	&	주소 연산자 (단항 연산자)
 	sizeof	크기
3	*	곱셈 연산자
 	/	나눗셈 연산자
 	%	나머지 연산자
4	+	덧셈 연산자 (이항 연산자)
 	-	뺄셈 연산자 (이항 연산자)
5	<<	비트 왼쪽 시프트 연산자
 	>>	부호 비트를 확장하면서 비트 오른쪽 시프트
6	<	관계 연산자(보다 작은)
 	<=	관계 연산자(보다 작거나 같은)
 	>	관계 연산자(보다 큰)
 	>=	관계 연산자(보다 크거나 같은)
7	==	관계 연산자(와 같은)
 	!=	관계 연산자(와 같지 않은)
8	&	비트 AND 연산자
9	^	비트 XOR 연산자
10	|	비트 OR 연산자
11	&&	논리 AND 연산자
12	||	논리 OR 연산자
13	? :	삼항 조건 연산자
14	=	대입 연산자 및 복합 대입 연산자(=, +=, -=, *=, /=, %=, <<=, >>=, &=, ^=, |=)
15	,	쉼표 연산자
'''
#369game
'''a=0
b=0
while True:
    a += 1
    a_=str(a)
    for i in range(len(a_)):
        if a_[i]=='3' or a_[i]=='6' or a_[i]=='9':
            b += 1
        else:
            ...
    if b>=1:
        for i in range(0,b):
            print("짝",end="")
        print(f'({a})')
    else:
        print(a)
    b=0
    time.sleep(0.1)'''

#369game2
'''a=0
b=0
while True:
    a += 1
    b += str(a).count('3')+str(a).count('6')+str(a).count('9')
    for i in range(0,b):
        print("짝",end="")
    print(f'({a})')
    b=0
    time.sleep(0.1)'''

#3 or 5 나머지
'''a=0
b=0
for i in range(1, 101):
    if i%3 == 0 or i%5 == 0:
        a += i
    #else가 있을 필요는 X
print(a)'''

#별 출력
'''for i in range(5, 1-1, -1):
    for j in range(i):
        print("*",end='')
    print('\n')
    time.sleep(0.1)'''

#구구단
'''for i in range(1,11):
    print(f'---{i}단---')
    for j in range(1,11):
        print(f'{i}X{j}={i*j}')'''

#sum
#print(sum(range(1,11)))
